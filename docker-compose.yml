version: '3.8'

# Services
services:

  # Nginx Service
  nginx:
    build: ./.docker/nginx
    ports:
      - 80:80
      - 443:443
    networks:
      default:
        aliases:
          - frontend.demo.test
    volumes:
      - ./src/backend:/var/www/backend
      - ./.docker/nginx/conf.d:/etc/nginx/conf.d
      - phpmyadmindata:/var/www/phpmyadmin
      - ./.docker/nginx/certs:/etc/nginx/certs
    depends_on:
      - backend
      - frontend
      - phpmyadmin

  # Backend Service
  backend:
    build:
      context: ./src/backend
      target: backend
      args:
        HOST_UID: $HOST_UID
    working_dir: /var/www/backend
    volumes:
      - ./src/backend:/var/www/backend
      - ./.docker/backend/init:/opt/files/init
      - ./.docker/nginx/certs:/usr/local/share/ca-certificates
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started

  # Worker Service
  worker:
    build:
      context: ./src/backend
      target: worker
      args:
        HOST_UID: $HOST_UID
    working_dir: /var/www/backend
    volumes:
      - ./src/backend:/var/www/backend
    depends_on:
      - backend

  # Frontend Service
  frontend:
    build: ./src/frontend
    working_dir: /var/www/frontend
    volumes:
      - ./src/frontend:/var/www/frontend
    depends_on:
      - backend

  # MySQL Service
  mysql:
    image: mysql/mysql-server:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: demo
    volumes:
      - ./.docker/mysql/my.cnf:/etc/mysql/my.cnf
      - mysqldata:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
      interval: 5s
      retries: 10

  # PhpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5-fpm-alpine
    environment:
      PMA_HOST: mysql
    volumes:
      - phpmyadmindata:/var/www/html
    depends_on:
      mysql:
        condition: service_healthy

  # Ngrok Service
  ngrok:
    image: wernight/ngrok:latest
    ports:
      - 4040:4040
    environment:
      NGROK_PROTOCOL: http
      NGROK_PORT: nginx:443
      NGROK_AUTH: ${NGROK_AUTH}
    depends_on:
      - nginx

  # Redis Service
  redis:
    image: redis:6-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data

# Volumes
volumes:

  mysqldata:

  phpmyadmindata:

  redisdata:
